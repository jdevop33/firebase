name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'app/api/**'
      - 'prisma/**'
      - 'requirements.txt'
      - 'Dockerfile.backend'
  pull_request:
    branches: [ main ]
    paths:
      - 'app/api/**'
      - 'prisma/**'
      - 'requirements.txt'
      - 'Dockerfile.backend'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: us-central1
  SERVICE: bolt-backend
  REGION: us-central1

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: bolt2_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio httpx
          
      - name: Generate Prisma Client
        run: prisma generate
        
      - name: Run tests
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/bolt2_test
          AI_API_KEY: ${{ secrets.AI_API_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
        run: pytest app/api/python/tests

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Docker Auth
        run: gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev

      - name: Build and Push Container
        run: |
          docker build -t $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$SERVICE:${{ github.sha }} -f Dockerfile.backend .
          docker push $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$SERVICE:${{ github.sha }}

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: $GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$SERVICE:${{ github.sha }}
          env_vars: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            AI_API_KEY=${{ secrets.AI_API_KEY }}
            CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}